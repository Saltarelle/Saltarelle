<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SaltarelleLib</name>
    </assembly>
    <members>
        <member name="M:Saltarelle.IScriptManagerService.GetUniqueId">
            <summary>
            Get a uniqe id, suitable for assignment to a new control.
            </summary>
            <returns>A unique id.</returns>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.RegisterTopLevelControl(System.String,Saltarelle.IControl)">
            <summary>
            Register a control as a top level control. This means that its constructor will get called on page load.
            The control can later be retrieved using the <see cref="M:Saltarelle.IScriptManagerService.GetTopLevelControl(System.String)"/> method.
            </summary>
            <param name="control">The top level control.</param>
            <param name="id">Key with which the control can later be retrieved by the <see cref="M:Saltarelle.IScriptManagerService.GetTopLevelControl(System.String)"/> method.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.GetTopLevelControl(System.String)">
            <summary>
            Gets a control previously registered by the <see cref="M:Saltarelle.IScriptManagerService.RegisterTopLevelControl(System.String,Saltarelle.IControl)"/> method. Returns null if the control has not been registered.
            </summary>
            <param name="id">ID under which the control to return is registered as.</param>
            <returns>The registered control, or null if the control has not been registered.</returns>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.RegisterClientService(System.Type)">
            <summary>
            Registers a service which should be usable on the client. This will cause an instance of this service to be loaded on the server.
            The <see cref="T:Saltarelle.RequiresClientServiceAttribute"/> attribute can be used to always register a service when a type is registered.
            Registering a service also registers its type.
            </summary>
            <param name="type">Type of the service. This type must implement the IGlobalService interface</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.IsClientServiceRegistered(System.Type)">
            <summary>
            Determines whether a service is registered (by the <see cref="M:Saltarelle.IScriptManagerService.RegisterClientService(System.Type)"/> method).
            </summary>
            <param name="type">Type of the service. This type must implement the IGlobalService interface</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.RegisterClientAssembly(System.Reflection.Assembly)">
            <summary>
            Register that an assembly, and all assemblies it depends on, will be referenced on the client.
            </summary>
            <param name="asm">Type to register</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.RegisterTopLevelControl(Saltarelle.IControl)">
            <summary>
            Register a control as a top level control. This means that its constructor will get called on page load.
            </summary>
            <param name="control">The top level control.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.AddScriptInclude(System.String,System.Boolean)">
            <summary>
            Instruct the client to include a specific script. This script should not be an assembly script, for those use <see cref="M:Saltarelle.IScriptManagerService.RegisterClientAssembly(System.Reflection.Assembly)"/> (or one of the extension methods that delegate to it).
            Calling this method multiple times for the same script does NOT result in the script being included more than once.
            </summary>
            <param name="url">Url of the script to include</param>
            <param name="includeBeforeAssemblyScripts">True to include the script before any assembly script, false to include it after all assembly scripts.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.GetAllRequiredIncludes">
            <summary>
            Get an ordered list of scripts to include. This method will return all assembly scripts in the correct topological order of their dependencies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.AddStartupScript(System.Func{System.String})">
            <summary>
            Add a startup script with lazy evaluation. The script will be retrieved just before it is actually rendered, allowing
            the use of startup scripts that depend on the final state of a control, as opposed to when the script is added.
            </summary>
            <param name="scriptRetriever">Function to invoke to return the startup script. The returned script should be a valid JavaScript statement.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.GetStartupScripts">
            <summary>
            Get all registered startup scripts. Each entry is a statement which should be executed on document load.
            </summary>
            <returns>The registered scripts</returns>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.RegisterBeforeRenderCallback(System.Action)">
            <summary>
            Registers an actio nto be executed just before the script manager content is rendered. This callback can access the script manager.
            </summary>
            <param name="action">Action to execute just before the content is rendered.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerService.ExecuteBeforeRenderCallbacks">
            <summary>
            Executes all the actions that have been added with the <see cref="M:Saltarelle.IScriptManagerService.RegisterBeforeRenderCallback(System.Action)"/> method.
            </summary>
        </member>
        <member name="M:Saltarelle.IScriptManagerServiceExtensions.AddStartupScript(Saltarelle.IScriptManagerService,System.String)">
            <summary>
            Add a startup script.
            </summary>
            <param name="service">Instance to add the script to.</param>
            <param name="script">The startup script. This should be a valid JavaScript statement.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerServiceExtensions.RegisterClientType(Saltarelle.IScriptManagerService,System.Type)">
            <summary>
            Register a type as being used on the client side. This means that the script for this type's assembly,
            and all assemblies it depends on, will be referenced on the client.
            This method should be called in the constructors for all objects that are to be used on the client side and are not decorated with a [Record] attribute.
            This method will also investigate the [RequiresClientServiceAttribute] attributes for the types and register those services.
            </summary>
            <param name="service">Instance to register the type for.</param>
            <param name="type">Type to register</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerServiceExtensions.RegisterClientType``1(Saltarelle.IScriptManagerService)">
            <summary>
            Generic version of <see cref="M:Saltarelle.IScriptManagerServiceExtensions.RegisterClientType(Saltarelle.IScriptManagerService,System.Type)"/>
            </summary>
            <typeparam name="T">Type to register.</typeparam>
            <param name="service">Instance to register the type for.</param>
        </member>
        <member name="M:Saltarelle.IScriptManagerServiceExtensions.RegisterClientService``1(Saltarelle.IScriptManagerService)">
            <summary>
            Generic version of <see cref="M:Saltarelle.IScriptManagerService.RegisterClientService(System.Type)"/>
            </summary>
            <typeparam name="T">Service to register.</typeparam>
            <param name="service">Instance to register the service for.</param>
        </member>
        <member name="T:Saltarelle.Configuration.Internal.Xml.saltarelle">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelle.plugins">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelle.routes">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelle.scripts">
            <remarks/>
        </member>
        <member name="T:Saltarelle.Configuration.Internal.Xml.saltarellePlugin">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarellePlugin.assembly">
            <remarks/>
        </member>
        <member name="T:Saltarelle.Configuration.Internal.Xml.saltarelleRoutes">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleRoutes.assemblyScripts">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleRoutes.assemblyCss">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleRoutes.assemblyResources">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleRoutes.delegate">
            <remarks/>
        </member>
        <member name="T:Saltarelle.Configuration.Internal.Xml.saltarelleScripts">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScripts.add">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScripts.debug">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScripts.debugSpecified">
            <remarks/>
        </member>
        <member name="T:Saltarelle.Configuration.Internal.Xml.saltarelleScriptsAdd">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScriptsAdd.url">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScriptsAdd.assembly">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScriptsAdd.resource">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScriptsAdd.position">
            <remarks/>
        </member>
        <member name="P:Saltarelle.Configuration.Internal.Xml.saltarelleScriptsAdd.positionSpecified">
            <remarks/>
        </member>
        <member name="T:Saltarelle.Configuration.Internal.Xml.scriptPosition">
            <remarks/>
        </member>
        <member name="F:Saltarelle.Configuration.Internal.Xml.scriptPosition.BeforeCoreScripts">
            <remarks/>
        </member>
        <member name="F:Saltarelle.Configuration.Internal.Xml.scriptPosition.BeforeAssemblyScripts">
            <remarks/>
        </member>
        <member name="F:Saltarelle.Configuration.Internal.Xml.scriptPosition.AfterAssemblyScripts">
            <remarks/>
        </member>
        <member name="P:Saltarelle.WebResourceAttribute.ResourceQualifiedName">
            <summary>
            Fully qualified name of the resource, e.g. Namespace.SubNamespace.Image.gif
            </summary>
        </member>
        <member name="P:Saltarelle.WebResourceAttribute.PublicResourceName">
            <summary>
            Name under which the resource is published e.g. Image.gif.
            </summary>
        </member>
        <member name="P:Saltarelle.CssResourceAttribute.CssVariableName">
            <summary>
            The LessCss variable used to identify the resource in css (without @ sign).
            This may only consist of the letters a-z, hyphen and the underscore character.
            </summary>
        </member>
        <member name="T:Saltarelle.IGlobalService">
            <summary>
            This interface must be implemented by all global services (interfaces which can be used with the <see cref="T:Saltarelle.GlobalServices"/> class.
            </summary>
        </member>
        <member name="M:Saltarelle.IGlobalService.Setup">
            <summary>
            Called after the service is created, but before it is returned to the requester. Do things such as load services that this service depends on, and add client scripts if the server should be available client side.
            </summary>
        </member>
        <member name="P:Saltarelle.IGlobalService.ConfigObject">
            <summary>
            Returns the configuration object which is passed to the client instantiation of the service.
            This property will only be investigated for services which are to be transferred to the client.
            Services which do not have a clientside facet can safely throw a <see cref="T:System.NotImplementedException"/>.
            </summary>
        </member>
        <member name="T:Saltarelle.GlobalServiceAttribute">
            <summary>
            Indicates that a class is a global service. A global service can optionally implement the IGlobalService interface
            </summary>
        </member>
        <member name="M:Saltarelle.ImportCssResourceAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="typeInAssembly">A type in the assembly containing the resource.</param>
            <param name="publicResourceName">PublicResourceName of the resource to import.</param>
            <param name="cssVariableName">Name of the CSS variable that retrieves the URL for the resource.</param>
        </member>
        <member name="P:Saltarelle.ImportCssResourceAttribute.ResourceAssembly">
            <summary>
            Assembly to import resource from.
            </summary>
        </member>
        <member name="P:Saltarelle.ImportCssResourceAttribute.PublicResourceName">
            <summary>
            Public name of the resource to import. Note: The public resource name, not the qualifed name or the LessCss variable.
            </summary>
        </member>
        <member name="P:Saltarelle.ImportCssResourceAttribute.CssVariableName">
            <summary>
            The LessCss variable used to identify the resource in css (without @ sign).
            This may only consist of the letters a-z, hyphen and the underscore character.
            </summary>
        </member>
    </members>
</doc>
